services:
  mysql-master:
    platform: linux/amd64
    image: mysql:${VERSION}
    container_name: mysql${VERSION}-master
    networks:
      - net_common
    privileged: true
    user: 501:20
    volumes:
      - $HOME/docker/mysql${VERSION}/mysql_0/data/:/var/lib/mysql
      - $HOME/docker/mysql${VERSION}/mysql_0/logs/:/var/log/mysql
      - $HOME/docker/mysql${VERSION}/mysql_0/conf/:/etc/mysql
      # 数据库还原目录 可将需要还原的sql文件放在这里
      - $HOME/docker/mysql${VERSION}/mysql_0/init/:/docker-entrypoint-initdb.d
      - $HOME/docker/mysql${VERSION}/mysql_0/my.cnf:/etc/my.cnf
    # command: [
    #     '--character-set-server=utf8mb4',
    #     '--collation-server=utf8mb4_general_ci',
    #     'lower-case-table-names=1',
    #     '--max_connections=3000'
    # ]
    environment:
      MYSQL_ROOT_PASSWORD: 1121
      # MYSQL_USER: xxx
      # MYSQL_PASSWORD: xxx
      # MYSQL_DATABASE: xxx
      TZ: Asia/Shanghai
    ports:
      - 53306:3306
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 30s
      timeout: 20s
      retries: 10
      start_period: 30s

  mysql-slave-1:
    platform: linux/amd64
    image: mysql:${VERSION}
    container_name: mysql${VERSION}-slave-1
    depends_on:
      mysql-master:
        condition: service_healthy
    networks:
      - net_common
    privileged: true
    user: 501:20
    volumes:
      - $HOME/docker/mysql${VERSION}/mysql_1/data/:/var/lib/mysql
      - $HOME/docker/mysql${VERSION}/mysql_1/logs/:/var/log/mysql
      - $HOME/docker/mysql${VERSION}/mysql_1/conf/:/etc/mysql
      # - $HOME/docker/mysql${VERSION}/mysql_1/init/:/docker-entrypoint-initdb.d
      - $HOME/docker/mysql${VERSION}/mysql_1/my.cnf:/etc/my.cnf
    environment:
      MYSQL_ROOT_PASSWORD: 1121
      # MYSQL_USER: xxx
      # MYSQL_PASSWORD: xxx
      TZ: Asia/Shanghai
    ports:
      - 53307:3306
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 30s
      timeout: 20s
      retries: 10
      start_period: 30s

  mysql-slave-2:
    platform: linux/amd64
    image: mysql:${VERSION}
    container_name: mysql${VERSION}-slave-2
    depends_on:
      mysql-slave-1:
        condition: service_healthy
    networks:
      - net_common
    privileged: true
    user: 501:20
    volumes:
      - $HOME/docker/mysql${VERSION}/mysql_2/data/:/var/lib/mysql
      - $HOME/docker/mysql${VERSION}/mysql_2/logs/:/var/log/mysql
      - $HOME/docker/mysql${VERSION}/mysql_2/conf/:/etc/mysql
      # - $HOME/docker/mysql${VERSION}/mysql_2/init/:/docker-entrypoint-initdb.d
      - $HOME/docker/mysql${VERSION}/mysql_2/my.cnf:/etc/my.cnf
    environment:
      MYSQL_ROOT_PASSWORD: 1121
      # MYSQL_USER: xxx
      # MYSQL_PASSWORD: xxx
      TZ: Asia/Shanghai
    ports:
      - 53308:3306

#  mysql-initer:
#    image: luvx/mysql_client:latest
#    container_name: mysql_client
#    build:
#      dockerfile: ../luvx/Dockerfile
#      target: mysql_client
#    networks:
#      - net_common
#    depends_on:
#      - mysql-master
#      - mysql-slave-1
#      - mysql-slave-2
#    # command: ["sleep", "infinity"]
#    command: >
#      bash -c "
#        function test_func()
#        {
#          mysql -h $1 -u root -p1121 -e \"grant select,replication slave,replication client on *.* to 'slave'@'%' identified by '1121';flush privileges;\"
#          # 'mysql-bin.000001 0'
#          mysql -h $2 -u root -p1121 -e \"change master to master_host='$1',master_port=3306,master_user='slave',master_password='1121',`mysql -h $1 -u slave -p1121 -e \"show master status;\" | tail -n 1 | awk '{printf \"master_log_file=\\47\"$1\"\\47,master_log_pos=\"$2\"\"}'`,master_connect_retry=30;start slave;\"
#        }
#        typeset -f test_func
#        sleep 20
#        test_func mysql-master mysql-slave-1
#        test_func mysql-slave-1 mysql-slave-2
#        echo `date`: \"主从创建......\"
#      "

#  databasir:
#    image: vrantt/databasir:latest
#    container_name: databasir
#    networks:
#      - net_common
#    environment:
#      - DATABASIR_DB_URL=mysql-master:3306
#      - DATABASIR_DB_USERNAME=root
#      - DATABASIR_DB_PASSWORD=1121
#    ports:
#      - 8080:8080

#  whodb:
#    platform: linux/amd64
#    image: clidey/whodb
#    container_name: whodb
#    networks:
#      - net_common
#    # ports:
#    #   - "8080:8080"
#    volumes:
#      - $HOME/data/sqlite/main.db:/db/main.db

  chat2db:
    image: chat2db/chat2db:latest
    container_name: chat2db
    ports:
      - "10824:10824"
    networks:
      - net_common
    volumes:
      - $HOME/docker/chat2db:/root/.chat2db
#      - $HOME/.chat2db:/root/.chat2db

  chartdb:
    image: luvx/chartdb:latest
    container_name: chartdb
    networks:
      - net_common

networks:
  net_common:
    external: true
