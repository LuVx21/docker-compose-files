name: 同步DockerHub镜像

on:
  workflow_dispatch:
    inputs:
      platform:
        description: '架构'
        required: true
        default: 'linux/arm64'
        type: choice
        options:
        - linux/386
        - linux/arm64
        - linux/amd64
        - linux/ppc64le
      dockerhub_images:
        description: '要拉取的 DockerHub 镜像,如foo/bar:v1,bar/foo:v2'
        required: true
        default: 'alpine:latest'

jobs:
  sync:
    name: 同步镜像
    runs-on: ubuntu-latest
    steps:
      - name: 参数信息
        run: |
          echo "=============================================================================="
          echo ${{ inputs.dockerhub_images }}
          echo ${{ inputs.platform }}
          echo "=============================================================================="
      # 增加可用磁盘空间
      - name: 增加构建磁盘空间
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 2048
          swap-size-mb: 128
          remove-dotnet: 'true'
          remove-haskell: 'true'
          # 如果空间还是不够用,可以把以下开启,清理出更多空间
          # remove-android: 'true'
          # remove-codeql: 'true'
          build-mount-path: '/var/lib/docker/'
      - name: 重启Docker服务
        run: sudo service docker restart
      - name: 登录GitHub容器
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: 小写GitHub用户名(namespace)
        run: echo "ACTOR_LOWER=$(echo '${{ github.actor }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV
      - name: 登录阿里云容器
        uses: docker/login-action@v3
        with:
          registry: ${{ vars.ALIYUN_REGISTRY }}
          username: ${{ secrets.ALIYUN_REGISTRY_USER }}
          password: ${{ secrets.ALIYUN_REGISTRY_PASSWORD }}
      - name: 登录腾讯云容器
        uses: docker/login-action@v3
        with:
          registry: ${{ vars.TXYUN_REGISTRY }}
          username: ${{ secrets.TXYUN_REGISTRY_USER }}
          password: ${{ secrets.TXYUN_REGISTRY_PASSWORD }}
      - name: 从DockerHub拉取Docker镜像
        run: |
          images=${{ inputs.dockerhub_images }}
          platform=${{ inputs.platform }}
          array=(${images//,/ })
          for image in ${array[@]}
          do
            image_name_tag=$(echo "$image" | awk -F'/' '{print $NF}')
            namespace=$(echo "$image" | awk -F'/' '{if (NF==3) print $2; else if (NF==2) print $1; else print ""}')
            image_name=$(echo "$image_name_tag" | awk -F':' '{print $1}')
            image_tag=$(echo "$image_name_tag" | awk -F':' '{if (NF==2) print $2; else print "latest"}')
            echo 解构后信息: $namespace $image_name $image_tag
            echo "拉取镜像 $image"
            docker pull --platform=$platform $image

            rsn=$(echo "$image" | awk -F':' '{print $1}')
            new_rsn=`echo $rsn | sed 's/\//_/g'`
            new_tag=${image_tag}
            if [[ ! "$platform" =~ "arm" ]];then
              new_tag="${new_tag}_${platform//\//_}"
            fi
            echo "新标签: $rsn:$image_tag -> $new_rsn:$new_tag"

            for registry in ${{ vars.ALIYUN }} ${{ vars.TXYUN }} ghcr.io,${{ env.ACTOR_LOWER }}; do
              array=(${registry//,/ })
              new_image=${array[0]}/${array[1]}/$new_rsn:$new_tag
              echo "同步镜像 $image -> $new_image"
              docker tag $image $new_image
              docker push $new_image && docker image rm $new_image
            done
            docker image rm $image
          done
