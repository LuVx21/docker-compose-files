name: 构建docker镜像

on:
  workflow_dispatch:
    inputs:
      dockerhub_image:
        description: '要构建的镜像模块'
        required: true
        default: ''
      tag:
        description: '要构建的镜像版本'
        required: true
        default: 'latest'

env:
  REGISTRY_USER: "${{ secrets.REGISTRY_USER }}"
  REGISTRY_PASSWORD: "${{ secrets.REGISTRY_PASSWORD }}"

jobs:
  build:
    name: Pull
    runs-on: ubuntu-latest
    steps:
      - name: 代码检出
        uses: actions/checkout@v4
      - name: 登录到Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.REGISTRY_USER }}
          password: ${{ env.REGISTRY_PASSWORD }}
      - name: aa
        run: |
          echo "磁盘信息"
          echo "=============================================================================="
          df -hT
          echo "=============================================================================="
      - name: 构建
        run: |
          module=${{ inputs.dockerhub_image }}
          if [ "$module" = "" ];then
            exit 1
          elif [ "$module" = "chartdb" ];then
            image='luvx/chartdb' version='v1.2.0' url=https://github.com/chartdb/chartdb.git#${{ inputs.tag }}
          elif [ "$module" = "dicedb" ];then
            image='luvx/dicedb' version='0.0.5' url=https://github.com/DiceDB/dice.git#${{ inputs.tag }}
          elif [ "$module" = "duckdb" ];then
            image='luvx/duckdb' version='v1.1.3' url=https://github.com/LuVx21/docker-compose-files.git#master:duckdb
            # url='../duckdb'
          elif [ "$module" = "json4u" ];then
            image='luvx/json4u' version='v3.0.0' url=https://github.com/loggerhead/json4u.git#${{ inputs.tag }}
          elif [ "$module" = "jupyter" ];then
            image='luvx/jupyter' version='0' url=https://github.com/LuVx21/docker-compose-files.git#master:jupyter
            # url='../jupyter'
          elif [ "$module" = "pichome" ];then
            image='luvx/pichome' version='2.0' url=https://github.com/zyx0814/Pichome-docker.git
          elif [ "$module" = "sentinel" ];then
            image='luvx/sentinel-dashboard' version='1.8.8'
            curl https://raw.githubusercontent.com/alibaba/Sentinel/master/sentinel-dashboard/Dockerfile > ./sentinel-dashboard/Dockerfile
            cd sentinel-dashboard && sed -i "" 's/1.8.6/1.8.8/g' Dockerfile && sed -i "" 's/amd64\///g' Dockerfile
          else
            echo -e "无指定模块名"
            exit 1
          fi
          echo "构建镜像: ${image}:${{ inputs.tag }} 上下文: ${url}"
          docker buildx build -t "$image":latest -t "$image":${{ inputs.tag }} --platform linux/amd64,linux/arm64 --push "$url"