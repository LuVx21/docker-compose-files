version: '3.9'

services:
  kafka_0:
    image: bitnami/kafka:${KAFKA_VERSION}
    container_name: kafka_0
    network_mode: net_kafka
    user: root
    ports:
      - 19092:9092
    environment:
      # KRaft
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=broker,controller # kafka角色, 做broker, 也要做controller
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka_0:9093,1@kafka_1:9093,2@kafka_2:9093 # 集群地址
      - KAFKA_ENABLE_KRAFT=yes # 允许使用kraft, 即Kafka替代Zookeeper
      - KAFKA_KRAFT_CLUSTER_ID=abcdefghijklmnopqrstuv # 使用Kafka时的集群id, 集群内的Kafka都要用这个id做初始化, UUID即可

      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER # 指定供外部使用的控制类请求信息
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093 # 定义kafka服务端socket监听端口
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT # 定义安全协议
      - ALLOW_PLAINTEXT_LISTENER=yes # 允许使用PLAINTEXT监听器, 默认false, 不建议在生产环境使用
      - KAFKA_HEAP_OPTS=-Xmx512M -Xms256M # 设置broker最大内存, 和初始内存
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=false # 不允许自动创建主题
      ### broker配置
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka_0:9092 # mini.rx:19092 # 定义外网访问地址（宿主机ip地址和端口）
      - KAFKA_BROKER_ID=0 # broker.id, 必须唯一
      # KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      # Clustering
      # KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR=3
      # KAFKA_CFG_TRANSACTION_STATE_LOG_MIN_ISR=2
      # KAFKA_CFG_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=3
    volumes:
      - $HOME/docker/kafka_v3/kafka_0/kafka/kraft:/bitnami/kafka

  kafka_1:
    image: bitnami/kafka:${KAFKA_VERSION}
    container_name: kafka_1
    network_mode: net_kafka
    user: root
    ports:
      - 29092:9092
    environment:
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka_0:9093,1@kafka_1:9093,2@kafka_2:9093
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_KRAFT_CLUSTER_ID=abcdefghijklmnopqrstuv

      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_HEAP_OPTS=-Xmx512M -Xms256M
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=false

      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka_1:9092 # mini.rx:29092
      - KAFKA_BROKER_ID=1
    volumes:
      - $HOME/docker/kafka_v3/kafka_1/kafka/kraft:/bitnami/kafka

  kafka_2:
    image: bitnami/kafka:${KAFKA_VERSION}
    container_name: kafka_2
    network_mode: net_kafka
    user: root
    ports:
      - 39092:9092
    environment:
      - KAFKA_CFG_NODE_ID=2
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka_0:9093,1@kafka_1:9093,2@kafka_2:9093
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_KRAFT_CLUSTER_ID=abcdefghijklmnopqrstuv

      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_HEAP_OPTS=-Xmx512M -Xms256M
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=false

      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka_2:9092 # mini.rx:39092
      - KAFKA_BROKER_ID=2
    volumes:
      - $HOME/docker/kafka_v3/kafka_2/kafka/kraft:/bitnami/kafka

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    network_mode: net_kafka
    # restart: always
    ports:
      - 8080:8080
    volumes:
      - /etc/localtime:/etc/localtime
    environment:
      - KAFKA_CLUSTERS_0_NAME=cluster_name_01 # 集群名称
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka_0:9092,kafka_1:9092,kafka_2:9092 # 集群地址

  kafka-console-ui:
    platform: linux/amd64
    image: wdkang/kafka-console-ui
    container_name: kafka-console-ui
    network_mode: net_kafka
    ports:
      - 7766:7766
    volumes:
      - $HOME/docker/kafka-console-ui/data:/app/data
      - $HOME/docker/kafka-console-ui/log:/app/log
    privileged: true

  kafdrop:
    platform: linux/amd64
    image: obsidiandynamics/kafdrop
    container_name: kafdrop
    network_mode: net_kafka
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka_0:9092,kafka_1:9092,kafka_2:9092"