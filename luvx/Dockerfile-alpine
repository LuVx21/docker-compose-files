ARG CR=${CR:-""}
ARG REGISTRY=${CR}${CR:+/}
ARG VERSION=3.21

# ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
FROM alpine:${VERSION} AS alpine
RUN echo "https://mirrors.aliyun.com/alpine/v${VERSION}/main/" > /etc/apk/repositories \
    && echo "https://mirrors.aliyun.com/alpine/v${VERSION}/community/" >> /etc/apk/repositories

# ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
FROM luvx/alpine:${VERSION} AS alpine-arch-amd64
ARG ARCH=x64 ARCH_V1=x64 ARCH_V2=amd64
FROM luvx/alpine:${VERSION} AS alpine-arch-arm64
ARG ARCH=aarch64 ARCH_V1=arm64 ARCH_V2=aarch64
FROM alpine-arch-$TARGETARCH AS alpine-arch

# ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
FROM alpine-arch AS vscode_downloader

RUN wget -O vscode_cli.tar.gz "https://code.visualstudio.com/sha/download?build=stable&os=cli-alpine-${ARCH_V1}" \
    && tar -zxvf vscode_cli.tar.gz

FROM luvx/alpine:${VERSION} AS vscode
COPY --from=vscode_downloader code /usr/bin
VOLUME ["/root/.vscode", "/root/.vscode-server"]
EXPOSE 8000
CMD ["sleep", "infinity"]

# ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
FROM luvx/alpine:${VERSION} AS litecli
RUN apk add --no-cache litecli
ENTRYPOINT ["litecli"]

FROM luvx/alpine:${VERSION} AS mycli
RUN apk add --no-cache mycli
ENTRYPOINT ["mycli"]

FROM luvx/alpine:${VERSION} AS pgcli
RUN apk add --no-cache pgcli
ENTRYPOINT ["pgcli"]